generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  LOCAL
  GOOGLE
}

enum FriendRequestStatus {
  PENDING
  ACCEPTED
  DECLINED
}

model User {
  id                String        @id @default(cuid())
  name              String       
  display_name      String        @unique
  email             String        @unique
  password          String?       
  image             String        @default("/default.jpg")
  type              UserType      
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  sentFriendRequests     FriendRequest[] @relation("Sender")
  receivedFriendRequests FriendRequest[] @relation("Receiver")
  sentMessages           Message[]       @relation("Sender")
  groupMemberships       GroupMember[]
}

model FriendRequest {
  id         String             @id @default(cuid())
  senderId   String
  receiverId String
  status     FriendRequestStatus
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt

  sender   User @relation("Sender", fields: [senderId], references: [id])
  receiver User @relation("Receiver", fields: [receiverId], references: [id])

  @@unique([senderId, receiverId])
}

model Group {
  id          String        @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  members  GroupMember[]
  messages Message[]
}

model GroupMember {
  id        String   @id @default(cuid())
  userId    String
  groupId   String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user  User  @relation(fields: [userId], references: [id])
  group Group @relation(fields: [groupId], references: [id])

  @@unique([userId, groupId])
}

model Message {
  id        String   @id @default(cuid())
  content   String
  senderId  String
  groupId   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sender User  @relation("Sender", fields: [senderId], references: [id])
  group  Group? @relation(fields: [groupId], references: [id])
}